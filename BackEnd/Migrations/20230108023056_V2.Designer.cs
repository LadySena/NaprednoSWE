// <auto-generated />
using System;
using BackEnd.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackEnd.Migrations
{
    [DbContext(typeof(SkolaKlizanjaContext))]
    [Migration("20230108023056_V2")]
    partial class V2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackEnd.Models.Cas", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cena")
                        .HasColumnType("int")
                        .HasColumnName("Cena");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Naziv");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Opis");

                    b.Property<int?>("SkolaKlizanjaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SkolaKlizanjaID");

                    b.ToTable("Cas");
                });

            modelBuilder.Entity("BackEnd.Models.ClanSkoleKlizanja", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<int>("Godine")
                        .HasColumnType("int")
                        .HasColumnName("Godine");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Ime");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KorisnickoIme");

                    b.Property<string>("PotvrdaSifre")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PovrdaSifre");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Prezime");

                    b.Property<string>("RAND_SALT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RAND_SALT");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Sifra");

                    b.Property<int?>("SkolaKlizanjaID")
                        .HasColumnType("int");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Slika");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Telefon");

                    b.Property<float>("Tezina")
                        .HasColumnType("real")
                        .HasColumnName("Tezina");

                    b.Property<int>("Tip")
                        .HasColumnType("int")
                        .HasColumnName("Tip");

                    b.Property<float>("Visina")
                        .HasColumnType("real")
                        .HasColumnName("Visina");

                    b.HasKey("ID");

                    b.HasIndex("SkolaKlizanjaID");

                    b.ToTable("ClanSkoleKlizanja");
                });

            modelBuilder.Entity("BackEnd.Models.ClanoviTermini", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClanoviId")
                        .HasColumnType("int");

                    b.Property<int>("TerminId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ClanoviTermini");
                });

            modelBuilder.Entity("BackEnd.Models.Instruktor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Email");

                    b.Property<int>("Godine")
                        .HasColumnType("int")
                        .HasColumnName("Godine");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Ime");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KorisnickoIme");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Opis");

                    b.Property<string>("PotvrdaSifre")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PovrdaSifre");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Prezime");

                    b.Property<string>("RAND_SALT")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RAND_SALT");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Sifra");

                    b.Property<int?>("SkolaKlizanjaID")
                        .HasColumnType("int");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Slika");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Telefon");

                    b.Property<int>("Tip")
                        .HasColumnType("int")
                        .HasColumnName("Tip");

                    b.HasKey("ID");

                    b.HasIndex("SkolaKlizanjaID");

                    b.ToTable("Instruktor");
                });

            modelBuilder.Entity("BackEnd.Models.InstruktoriCasovi", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CasId")
                        .HasColumnType("int");

                    b.Property<int>("InstruktorId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("InstruktoriCasovi");
                });

            modelBuilder.Entity("BackEnd.Models.SkolaKlizanja", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Naziv");

                    b.HasKey("ID");

                    b.ToTable("SkolaKlizanja");
                });

            modelBuilder.Entity("BackEnd.Models.Termin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CasID")
                        .HasColumnType("int");

                    b.Property<string>("Datum")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Datum");

                    b.Property<string>("ImeInstruktora")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImeInstruktora");

                    b.Property<string>("KorisnickoImeInstruktora")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("KorisnickoImeInstruktora");

                    b.Property<int>("MaxOsoba")
                        .HasColumnType("int")
                        .HasColumnName("MaxOsoba");

                    b.Property<string>("NazivCasa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Naziv");

                    b.Property<string>("PrezimeInstruktora")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PrezimeTrenera");

                    b.Property<int>("TrenutnoOsoba")
                        .HasColumnType("int")
                        .HasColumnName("TrenutnoOsoba");

                    b.Property<string>("VremeKraja")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VremeKraja");

                    b.Property<string>("VremePocetka")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("VremePocetka");

                    b.HasKey("ID");

                    b.HasIndex("CasID");

                    b.ToTable("Termin");
                });

            modelBuilder.Entity("BackEnd.Models.Cas", b =>
                {
                    b.HasOne("BackEnd.Models.SkolaKlizanja", "SkolaKlizanja")
                        .WithMany("Casovi")
                        .HasForeignKey("SkolaKlizanjaID");

                    b.Navigation("SkolaKlizanja");
                });

            modelBuilder.Entity("BackEnd.Models.ClanSkoleKlizanja", b =>
                {
                    b.HasOne("BackEnd.Models.SkolaKlizanja", "SkolaKlizanja")
                        .WithMany("ClanoviSkoleKlizanja")
                        .HasForeignKey("SkolaKlizanjaID");

                    b.Navigation("SkolaKlizanja");
                });

            modelBuilder.Entity("BackEnd.Models.Instruktor", b =>
                {
                    b.HasOne("BackEnd.Models.SkolaKlizanja", "SkolaKlizanja")
                        .WithMany("Instruktori")
                        .HasForeignKey("SkolaKlizanjaID");

                    b.Navigation("SkolaKlizanja");
                });

            modelBuilder.Entity("BackEnd.Models.Termin", b =>
                {
                    b.HasOne("BackEnd.Models.Cas", null)
                        .WithMany("Termini")
                        .HasForeignKey("CasID");
                });

            modelBuilder.Entity("BackEnd.Models.Cas", b =>
                {
                    b.Navigation("Termini");
                });

            modelBuilder.Entity("BackEnd.Models.SkolaKlizanja", b =>
                {
                    b.Navigation("Casovi");

                    b.Navigation("ClanoviSkoleKlizanja");

                    b.Navigation("Instruktori");
                });
#pragma warning restore 612, 618
        }
    }
}
